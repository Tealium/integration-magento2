<?php

/** @var  \Tealium\Tags\Block\Template  $this */
$helper = $this->helper('Tealium\Tags\Helper\Data');
$store = $this->getStore();

// if Tealium extension is not enabled, return immediately to not render
if (!$helper->isEnabled($store)) {
    return; // not enabled, no javascript inserted
}

$_product_id = $this->getRequest()->getParam('id',null);
$_category_id = $this->getRequest()->getParam('cat_id',null);
$_product = $this->getObjectManager()->create('Magento\Catalog\Model\Product')->load($_product_id);
$_category = $this->getObjectManager()->create('Magento\Catalog\Model\Category')->load($_category_id);

// set custom data with product information
$customData = array();
$customData["page_name"] = $_product->getName();
$customData["page_type"] = "product send";
$customData["product_id"] = $_product->getId();
$customData["product_sku"] = $_product->getSku();
$customData["product_name"] = $_product->getName();
$customData["product_brand"] = $_product->getBrand();
$customData["product_category"] =
    $_category ? $_category->getName() : 'no_category';
$customData["product_unit_price"] =
    number_format($_product->getSpecialPrice() ? : "0.00", 2, ".",'');
$customData["product_list_price"] =
    number_format($_product->getPrice()? : "0.00", 2, ".",'');

// create a tealium object for the page
$tealium = $helper->init($store, $this, "ProductPage")
    ->addCustomDataFromSetup($store, "Home")
    ->addCustomDataFromObject($customData)
    ->getTealiumObject();

// load and use the external config if it's enabled, and render Tealium
// JavaScript code to the page.
if ($helper->getIsExternalScript($store)) {
    $syncType = "sync";
    $externalScriptType = $helper->getExternalScriptType($store);
    if ($externalScriptType == "sync" || $externalScriptType == "async") {
        $syncType = $externalScriptType;
    }
    echo $tealium->render("full", true, $syncType);
} else {
    echo $tealium->render("udo");
}

// Sometimes it's useful to send the entire udo to a server for diagnostics.
// Render a tag in the form of an html <img> element that
// will send the url encoded udo to a specified server if the feature is
// enabled in the config.
echo $helper->getDiagnosticTag($store);
