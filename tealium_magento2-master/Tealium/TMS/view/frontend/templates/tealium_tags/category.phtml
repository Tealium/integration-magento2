<?php

/** @var Magento\Framework\View\Element\Template  $this */
$helper = $this->helper('Tealium\Tags\Helper\Data');
$store = $this->getStore();


// if Tealium extension is not enabled, return immediately to not render
if (!$helper->isEnabled($store)) {
    return; // not enabled, no javascript inserted
}

// create a tealium object for the page
$tealium = $helper->init($store, $this, "Category")
    ->addCustomDataFromSetup($store, "Category")
    ->getTealiumObject();

// load and use the external config if it's enabled, and render Tealium
// JavaScript code to the page.
if ($helper->getIsExternalScript($store)) {
    $syncType = "sync";
    $externalScriptType = $helper->getExternalScriptType($store);
    if ($externalScriptType == "sync" || $externalScriptType == "async") {
        $syncType = $externalScriptType;
    }
    echo $tealium->render("full", true, $syncType);
} else {
    echo $tealium->render("udo");
}

// Sometimes it's useful to send the entire udo to a server for diagnostics.
// Render a tag in the form of an html <img> element that
// will send the url encoded udo to a specified server if the feature is
// enabled in the config.
echo $helper->getDiagnosticTag($store);
